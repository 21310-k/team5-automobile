H8S,H8/300 SERIES C/C++ COMPILER (V.6.02.01.000)   28-Jan-2025 15:30:23 PAGE   1

************ SOURCE LISTING ************

      Line Pi 0----+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+--
FILE NAME: C:\Users\s4exp\Downloads\soft2_test\soft2\soft2\soft2\Soft2\main.c
         1     /****************************************************************************************************************/
         2     /*  FILE        :main.c                                                                                         */
         3     /*  DATE        :Tue, Jan 17, 2012                                                                              */
         4     /*  DESCRIPTION :AGV Main Program                                                                               */
         5     /*  CPU TYPE    :H8/3052F                                                                                       */
         6     /****************************************************************************************************************/
         7     #include    "stdio.h"
         8     #define MAIN                                        /* マクロMAINの定義                                         */
         9     
        10     #include    "machine.h"                             /* 組込み関数の定義                                         */
        11     #include    "reg3052.h"                             /* H8/3052Fの内蔵モジュール定義                             */
        12     #include    "agvdef.h"                              /* 無人搬送車のデバイス定義                                 */
        13     #include    "agvvars.h"                             /* 無人搬送車の共通変数を定義                               */
        14     #include    "def_monitor_printf.h"
        15     
        16     /****************************************************************************************************************/
        17     /*  AGVデバイス初期化モジュール agv_init                                                                        */
        18     /****************************************************************************************************************/
        19     void agv_init(void) {
        20         //本番
        21         //ハードウェアの初期化
        22         MOTOR_STATE = MOTOR_STOP;        //モータの停止
        23         bios_led_output(0x00);         //LEDの消灯
        24         bios_da_output(HANDLE_CENTER);  //ハンドルを中心に移動する
        25     
        26         //ITU0の初期化
        27         TCR0 = 0xa0;
        28         TIOR0 = 0x8b;
        29         GRA0 = 1249;
        30     
        31         //ITU1の初期化
        32         TCR1 = 0xa6;
        33         TIER1 |= 0xf9;
        34     
        35         //ITU2の初期化
        36         TCR2 = 0xa6;
        37         TIER2 |= 0xf9;
        38         GRA2 = 99;
        39     
        40         //ITU3の初期化
        41         TCR3 = 0xa6;
        42         TIER3 |= 0xf9;
        43         GRA3 = 9;
        44     
        45         IPRA |= 0x02;  //ITU1の割込みをプライオリティレベル1に設定
        46     
        47     
        48         TSTR |= 0x0d;            //ITU0・2・3をスタートする
        49         and_ccr(~0x80);        //割込み許可
        50     
        51     
        52         //テスト用
        53                 //ハードウェアの初期化
        54             MOTOR_STATE = MOTOR_STOP;        //モータの停止
        55         bios_led_output(0x00);         //LEDの消灯
        56         bios_da_output(HANDLE_CENTER);  //ハンドルを中心に移動する
        57         AGV_STATE = AGV_BOOT;
        58     
        59         //ITU0の初期化
        60         TCR0 = 0xa0;
        61         TIOR0 = 0x8b;
        62         GRA0 = 1249;
        63     
        64         //ITU1の初期化
        65         TCR1 = 0xa6;
        66         TIER1 |= 0xf9;
        67         GRA1 = 5000;
        68     
        69         //ITU2の初期化
        70         TCR2 = 0xa6;
        71         TIER2 |= 0xf9;
        72         GRA2 = 5000;
        73     
        74         //ITU3の初期化
        75         TCR3 = 0xa6;
        76         TIER3 |= 0xf9;
        77         GRA3 = 5000;
        78     
        79         TSTR |= 0x0f;            //ITU0・1・2・3をスタートする
        80         and_ccr(~0x80);        //割込み許可
        81     }
        82     
        83     #pragma interrupt LED_interrupt
        84     void LED_interrupt(void) {
        85         static unsigned char LED_FLAG = 0;// 静的変数LED_FLAGを定義
        86         if (LED_FLAG) {
        87             bios_led_output(0x00);// LED_FLAGが0ならばLED全点灯
        88         }
        89         else {
        90             bios_led_output(0xff);// LFLAGが0でなければLED全消灯
        91         }
        92         LED_FLAG = ~LED_FLAG;// LED_FLAGを反転する
        93         TSR1 &= ~0x01;// ITU1の割込みフラグのクリア
        94     }
        95     
        96     
        97     /****************************************************************************************************************/
        98     /*  main関数                                                                                                    */
        99     /****************************************************************************************************************/
       100     int main(void)
       101     {   
       102         unsigned int i = 0; 
       103         while(-1){
       104             for(i = 0; i < 60000; i++){}
       105             bios_step_output();
       106         }
       107         return 0;
       108     }
       109     
       110     /****************************************************************************************************************/
       111     /*  beepモジュール beep                                                                                         */
       112     /****************************************************************************************************************/
       113     void beep(void)
       114     {
       115     
       116     }


H8S,H8/300 SERIES C/C++ COMPILER (V.6.02.01.000)   28-Jan-2025 15:30:23 PAGE   1

******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION(P):                                0x00000104 Byte(s)
CONSTANT SECTION(C):                                0x00000000 Byte(s)
DATA     SECTION(D):                                0x00000003 Byte(s)
BSS      SECTION(B):                                0x00000002 Byte(s)

TOTAL PROGRAM  SECTION: 0x00000104 Byte(s)
TOTAL CONSTANT SECTION: 0x00000000 Byte(s)
TOTAL DATA     SECTION: 0x00000003 Byte(s)
TOTAL BSS      SECTION: 0x00000002 Byte(s)

    TOTAL PROGRAM SIZE: 0x00000109 Byte(s)



** ASSEMBLER/LINKAGE EDITOR LIMITS INFORMATION **

NUMBER OF EXTERNAL REFERENCE  SYMBOLS:        3 
NUMBER OF EXTERNAL DEFINITION SYMBOLS:        8 
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:         16 



**** COMPILE CONDITION INFORMATION ****

COMMAND LINE: -cpu=300HA:20 -object=C:\Users\s4exp\Downloads\soft2_test\soft2\soft2\soft2\Soft2\Debug\main.obj -debug -list=C:\Users\s4exp\Downloads\soft2_test\soft2\soft2\soft2\Soft2\Debug\main.lst -show=tab=4 -chgincpath C:\Users\s4exp\Downloads\soft2_test\soft2\soft2\soft2\Soft2\main.c -lang=c -nologo
CPU         : 300ha:20
